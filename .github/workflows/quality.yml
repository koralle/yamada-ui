name: Quality

on:
  pull_request:
    branches:
      - main
      - v*

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Build packages
        run: pnpm build

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Run tests
        run: pnpm test:ci

      - name: Install Codecov CLI
        run: |
          curl -Os https://cli.codecov.io/v0.7.2/linux/codecov
          chmod +x codecov

      - name: Upload coverage
        run: |
          ./codecov --verbose \
            upload-process \
            --fail-on-error \
            -t ${{ secrets.CODECOV_TOKEN }} \
            -n 'service'-${{ github.run_id }} \
            -F service \
            -f ./coverage/coverage-final.json

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Run ESLint
        run: pnpm lint

  type:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Run typecheck
        run: pnpm typecheck

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Run prettier
        run: pnpm format:check

  # coverage:
  #   name: Coverage
  #   runs-on: ubuntu-latest
  #   outputs:
  #     packages: ${{ steps.changed-packages.outputs.packages }}
  #     empty: ${{ steps.changed-packages.outputs.empty }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Find changed packages
  #       id: changed-packages
  #       uses: AlexShukel/get-changed-workspaces-action@v2.0.0

  # "coverage-report":
  #   name: Coverage report
  #   needs: [coverage]
  #   runs-on: ubuntu-latest
  #   if: ${{ !fromJson(needs.coverage.outputs.empty) }}
  #   strategy:
  #     matrix:
  #       package: ${{ fromJson(needs.coverage.outputs.packages) }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Check exist tests
  #       id: tests
  #       run: |
  #         echo "exist=$([ -d ${{ matrix.package.path }}/tests ] && echo true || echo false)" >> $GITHUB_OUTPUT
  #         echo "path=$(echo ${{ matrix.package.path }} | rev | cut -d'/' -f1,2,3 | rev)" >> $GITHUB_OUTPUT
  #       shell: bash

  #     - name: Add PR comment
  #       if: steps.tests.outputs.exist == 'false'
  #       uses: peter-evans/create-or-update-comment@v4
  #       with:
  #         issue-number: ${{ github.event.pull_request.number }}
  #         body: |
  #           ## Coverage report for ${{ matrix.package.name }}
  #           Test does not exist.

  #     - name: Install
  #       if: steps.tests.outputs.exist == 'true'
  #       uses: ./.github/composite-actions/install

  #     - name: Create coverage report
  #       if: steps.tests.outputs.exist == 'true'
  #       uses: ArtiomTr/jest-coverage-report-action@v2
  #       with:
  #         package-manager: pnpm
  #         custom-title: Coverage report for ${{ matrix.package.name }}
  #         test-script: pnpm test:ci "${{ steps.tests.outputs.path }}" --collectCoverageFrom="${{ steps.tests.outputs.path }}/**/*.{ts,tsx}"
  #         skip-step: install
